{
  "title": "goSync.go 241008",
  "@title": {
    "description": "The conventional newborn programmer greeting"
  },
  "helloWorld": "hello flutter eng",
  "@helloWorld": {
    "description": "hello in each language"
  },
  "home": "home",
  "@home": {
    "description": "hello in each language"
  },
  "golangInstall": "go install",
  "@golangInstall": {
    "description": "golang install in respective languages"
  },
  "goSyncHeading": "Golang Install on desktop for Windows, Apple, Linux",
  "@goSyncHeading": {
    "description": "headliners"
  },
  "danger": "dangr AI",
  "@danger": {
    "description": "danger"
  },
  "visitGoPlayground": "visit Go playground",
  "@visitGoPlayground": {
    "description": "url link to the Go playground"
  },
  "visitGoDevPlay": "visit Go playground",
  "@visitGoDevPlay": {
    "description": "url link to the Go playground"
  },
  "drawerHeader": "\n\n\n\ngo architecture designers",
  "@drawerHeader": {
    "description": "empty string"
  },
  "drawerHeader2": "\n\n\n\ngolang home go.dev",
  "@drawerHeader2": {
    "description": "goland home go.dev"
  },
  "drawerHeader3": "\n\n\n\ngolang gopher",
  "@drawerHeade3r": {
    "description": "goland home go.dev"
  },
  "drawerHeader4": "\n\n\n\ngolang terminal",
  "@drawerHeader4": {
    "description": "goland home go.dev"
  },
  "ethCheckGoHelp": "Now let us check that our installation of golang is working.\nOpen up a terminal (linux & mac) or a command prompt (windows) and type in the following code:\ngo version\nThis is your go version and it should be 1.12-1.13 as these are the latest versions\nType in the following code:\ngo help\nThis is a list of all available commands.",
  "@ethCheckGoHelp": {
    "description": "check go environment"
  },  
  "golangInstallInstructions": "Visit https://golang.org/doc/install and browse for assistance with ways to install golang on different system architectures.\nFor windows use the recommended .msi installer and it is fine to put the goland files deep within the windows system. C:\\Go is preferable when wanting to program.",
    "@goInstallInstructions": {
    "description": "check go environment"
  },
  "golangInstallInstructions2": "\nexport PATH=$PATH:/usr/local/go/bin\n",
  "@goInstallInstructions2": {
  "description": "check go environment 2"
  },
  "gosyncWindowsInstallInstructions": "1, Open the MSI file you downloaded and follow the prompts to install Go. \n\nBy default, the installer will install Go to Program Files or Program Files (x86). You can change the location as needed. After installing, you will need to close and reopen any open command prompts so that changes to the environment made by the installer are reflected at the command prompt.",
  "@gosyncWindowsInstallInstructions": {
    "description": "windows install instructions 1"
  },
  "gosyncWindowsInstallInstructions2": "2, Verify that you've installed Go.\nIn Windows, click the Start menu.\nIn the menu's search box, type cmd, then press the Enter key.\nIn the Command Prompt window that appears, type the following command:\n\t\t$ go version\n\nConfirm that the command prints the installed version of Go.",
  "@gosyncWindowsInstallInstructions2": {
    "description": "windows install instructions 2"
  },
  "gosyncWindowsInstallInstructions3": "3, the output should give the go version number and the architecture type. Something like this: ",
  "@gosyncWindowsInstallInstructions3": {
    "description": "windows install instructions 3"
  },
  "gosyncWindowsInstallInstructions4": "go version go1.23.1 windows/amd64",
  "@gosyncWindowsInstallInstructions4": {
    "description": "windows install instructions 4"
  },
  "gosyncWindowsInstallInstructions5": "5, AS of November 2024 the current release of Go is 1.23. To find the most recent release check the main website https://go.dev/dl/",
  "@gosyncWindowsInstallInstructions5": {
    "description": "windows install instructions 5"
  },
  "gosyncHeaderWindowsPostInstall": "Windows Post Install and Setup validation",
  "@gosyncHeaderWindowsPostInstall": {
    "description": "windows post install"
  },
  "gosyncHeaderWindowsPostInstallCheck": "The GOPATH is listed as C:/Users/adam/go but this folder is not created yet. Let's do that now. \nWe actually need to create 3 folders /go/pkg/mod in /Users/adam",
  "@gosyncHeaderWindowsPostInstallCheck": {
    "description": "windows post install check go env"
  },
  "gosyncGopathPurpose": "The GOPATH is a folder with elevated user rights to write and run go programmes. \nThe system no knows to allow go applications to run from here. \nModules are also stored here.",
  "@gosyncGopathPurpose": {
    "description": "windows post install check go env"
  }
}